// React is a JS library for building user interfaces (UIs)
// Some people use it as the V in MVC (Model-View-Controller)
// React was built so solve one problem:
// BUILDING LARGE APPLICATIONS WITH DATA THAT CHANGES OVER TIME
// Conceived at Facebook:
// Built to simplify the process of building complex UIs

// Write React components
// Render data to the page
// Make components communicate
// Handle user events
// Capture user input
// Talk to remote servers

// Component-based Architecture
// In React, we solve problems by creating components
// If a component gets too complex, we break it into smaller, simpler components
// 1. StoryBox: Root component
// 2. StoryForm: Contains form that allows users to add new stories to the feed
// 3. Story: Holds info for each individual story
// Components work similarly to JS functions:
// Components generate an output each time they are invoked

// The Vitual DOM is an in-memory representation of real DOM elements
// The real DOM elements are generated by React components before any changes are made to the page
// React is fast ->
// Virtual DOM diffing allows React to minimize changes to the DOM as a result of user actions,
// therefore increasing browser performance

// Components in React are JS classes that inherit from the React.Component base class

    class StoryBox extends React.Component {
      // every component needs a render() function
      // render() returns some Markup
      render() {
                 // no quotes needed due to JSX
        return(<div>Story Box</div>)
      }
    }

    ReactDOM.render(
      // takes 2 arguments
      // Every time we create a new React component, we use it by writing an
      // element named after the class
      <StoryBox />, document.getElementById('story-app')
    );


    // JSX is another way of writing JS with a transpile step
    // JSX = JavaScript XML
    
